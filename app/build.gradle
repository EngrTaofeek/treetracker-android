buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
        jcenter()
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.27.0'
        classpath 'com.github.triplet.gradle:play-publisher:1.2.0'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'
apply plugin: 'com.github.triplet.play'
apply plugin: "androidx.navigation.safeargs.kotlin"


def loadExtraProperties(String fileName) {
    def props = new Properties()
    if (System.getenv('CI_BITRISE') == "true") {
        URL propFile = new URL(System.getenv("BITRISEIO_treetracker_URL"))
        BufferedReader input = new BufferedReader(
                new InputStreamReader(propFile.openStream()))
        props.load(input)
    } else {
        props.load(new FileInputStream(fileName))
    }

    props.each { key, val ->
        project.setProperty(key, val)
    }
}


loadExtraProperties("treetracker.keys.properties")


android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    playAccountConfigs {
        defaultAccountConfig {
            jsonFile = file('keys.json')
        }
    }
    defaultConfig {
        applicationId "org.greenstand.android.TreeTracker"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 91
        versionName "1.2.7"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        playAccountConfig = playAccountConfigs.defaultAccountConfig
        buildConfigField "String", "OBJECT_STORAGE_ACCESS_KEY", "\"${dos_access_key}\""
        buildConfigField "String", "OBJECT_STORAGE_SECRET_KEY", "\"${dos_secret_key}\""
        buildConfigField "String", "TREETRACKER_CLIENT_ID", "\"${treetracker_client_id}\""
        buildConfigField "String", "TREETRACKER_CLIENT_SECRET", "\"${treetracker_client_secret}\""
        buildConfigField 'Boolean', 'TREE_HEIGHT_FEATURE_ENABLED', "false"
        buildConfigField 'Boolean', 'TREE_NOTE_FEATURE_ENABLED', "true"
        buildConfigField 'Boolean', 'AUTOMATIC_SIGN_OUT_FEATURE_ENABLED', "true"
        buildConfigField 'Boolean', 'BLUR_DETECTION_ENABLED', "false"
        buildConfigField 'Boolean', 'USE_AWS_S3', "false"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    buildTypes {
        release {
            minifyEnabled true
            resValue "string", "app_name", "Tree Tracker"
            buildConfigField "Boolean", "GPS_ACCURACY", "true"
            buildConfigField 'String', 'BASE_URL', '"https://treetracker.org/api/mobile/"'
            buildConfigField 'String', 'OBJECT_STORAGE_ENDPOINT', '"nyc3.digitaloceanspaces.com"'
            buildConfigField 'String', 'OBJECT_STORAGE_BUCKET', '"treetracker-production"'
            buildConfigField 'Boolean', 'ENABLE_FABRIC', "true"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix ".debug"
            resValue "string", "app_name", "Tree Tracker(debug)"
            buildConfigField "Boolean", "GPS_ACCURACY", "true"
            buildConfigField 'String', 'BASE_URL', '"http://test.treetracker.org/api/mobile/"'
            buildConfigField "String", "OBJECT_STORAGE_ACCESS_KEY", "\"${s3_access_key}\""
            buildConfigField "String", "OBJECT_STORAGE_SECRET_KEY", "\"${s3_secret_key}\""
            buildConfigField 'String', 'OBJECT_STORAGE_ENDPOINT', '"eu-central-1"'
            buildConfigField 'String', 'OBJECT_STORAGE_BUCKET', '"treetracker-test"'
            buildConfigField 'Boolean', 'USE_AWS_S3', "true"
            buildConfigField 'Boolean', 'ENABLE_FABRIC', "true"
            buildConfigField 'Boolean', 'BLUR_DETECTION_ENABLED', "true"
        }
        dev {
            initWith(debug)
            applicationIdSuffix ".dev"
            resValue "string", "app_name", "Tree Tracker(dev)"
            buildConfigField "Boolean", "GPS_ACCURACY", "false"
            buildConfigField 'String', 'BASE_URL', '"http://dev.treetracker.org/api/mobile/"'
            buildConfigField 'String', 'OBJECT_STORAGE_BUCKET', '"treetracker-dev"'
            buildConfigField 'Boolean', 'ENABLE_FABRIC', "false"
            buildConfigField 'Boolean', 'BLUR_DETECTION_ENABLED', "true"
        }

        prerelease {
            initWith(debug)
            applicationIdSuffix ".prerelease"
            resValue "string", "app_name", "Tree Tracker"
            buildConfigField "Boolean", "GPS_ACCURACY", "true"
            buildConfigField 'String', 'BASE_URL', '"https://treetracker.org/api/mobile/"'
            buildConfigField "String", "OBJECT_STORAGE_ACCESS_KEY", "\"${dos_access_key}\""
            buildConfigField "String", "OBJECT_STORAGE_SECRET_KEY", "\"${dos_secret_key}\""
            buildConfigField 'String', 'OBJECT_STORAGE_ENDPOINT', '"nyc3.digitaloceanspaces.com"'
            buildConfigField 'String', 'OBJECT_STORAGE_BUCKET', '"treetracker-production"'
            buildConfigField 'Boolean', 'ENABLE_FABRIC', "true"
        }

    }

    flavorDimensions "version"
    productFlavors {
        greenstand {
            dimension "version"
        }

        justdiggit {
            dimension "version"
            applicationIdSuffix ".justdiggit"
            buildConfigField "Boolean", 'TREE_HEIGHT_FEATURE_ENABLED', "true"
            buildConfigField 'Boolean', 'TREE_NOTE_FEATURE_ENABLED', "false"
            buildConfigField 'Boolean', 'AUTOMATIC_SIGN_OUT_FEATURE_ENABLED', "false"
        }
    }

    useLibrary 'org.apache.http.legacy'

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/io.netty.versions.properties'
        exclude 'META-INF/INDEX.LIST'

    }
}




androidExtensions {
    experimental = true
}

repositories {
    maven {
        url "https://maven.google.com"
    }
    maven { url 'https://maven.fabric.io/public' }
    mavenCentral()
}

dependencies {
    implementation 'com.google.android.material:material:1.1.0-alpha05'
    implementation 'com.google.android.gms:play-services-maps:16.1.0'
    compile 'com.google.maps.android:android-maps-utils:0.5+'

    //implementation 'com.amazonaws:aws-java-sdk:1.11.584'
    // 2.0: https://docs.aws.amazon.com/sdk-for-java/v2/developer-guide/setup-project-gradle.html
    // android s3 sdk does not support transfer acceleration
    implementation 'com.amazonaws:aws-android-sdk-core:2.13.6'
    implementation 'com.amazonaws:aws-android-sdk-s3:2.13.6'

    implementation 'org.koin:koin-android-viewmodel:2.0.0-GA'

    implementation 'androidx.appcompat:appcompat:1.1.0-rc01'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.exifinterface:exifinterface:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0-alpha02'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.2.0-alpha02'
    implementation "androidx.work:work-runtime-ktx:2.2.0-rc01"

    // Navigation
    implementation 'android.arch.navigation:navigation-fragment-ktx:1.0.0'
    implementation 'android.arch.navigation:navigation-ui-ktx:1.0.0'
    implementation 'android.arch.navigation:navigation-runtime:1.0.0'

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.1'

    //Database
    implementation 'androidx.room:room-runtime:2.1.0'
    implementation 'androidx.room:room-ktx:2.1.0'

    kapt "android.arch.persistence.room:compiler:2.1.0-alpha04"
    androidTestImplementation 'android.arch.persistence.room:testing:2.1.0-alpha05'
    devImplementation 'com.amitshekhar.android:debug-db:1.0.6'

    api 'com.squareup.okhttp3:logging-interceptor:3.6.0'
    api "com.squareup.retrofit2:retrofit:${retrofit2Version}"
    api "com.squareup.retrofit2:converter-gson:${retrofit2Version}"

    api 'com.jakewharton.timber:timber:4.7.1'
    api('com.crashlytics.sdk.android:crashlytics:2.8.0@aar') {
        transitive = true
    }
    api 'com.google.firebase:firebase-core:16.0.6'

    implementation "androidx.legacy:legacy-support-v4:${androidSupportVersion}"
}
configurations.all {
    resolutionStrategy {
        preferProjectModules()
        force 'com.google.code.gson:gson:2.8.5'
    }
}

play {
    track = 'beta' // or 'rollout' or 'production' or 'alpha'
}

apply plugin: 'com.google.gms.google-services'

